import{access as h,mkdir as S,readdir as w,readFile as k,stat as v,writeFile as D}from"fs/promises";import{createHash as F}from"crypto";import{existsSync as O,readdirSync as b,readFileSync as x,statSync as N}from"fs";import{homedir as T,hostname as C}from"os";import s from"path";import g from"prettier";import E from"typescript";import P from"launch-editor";async function u(o,r){let n=o.resolve("/");for(let a=0;a<20;a++){let l=o.join(r,"package.json"),f=await o.readFile(l);if(f)return JSON.parse(f);if(r===n)break;r=o.dirname(r)}return null}async function m(o){let r=[],n=await u(o,o.getRootDir());if(n){let a=p(n);r.push(...a)}return r}function p(o){let r=[];if(o&&typeof o=="object"){let n=new Set(Object.keys({...o.dependencies,...o.devDependencies}));for(let a of y)n.has(a)&&(r.some(l=>l.name===a)||r.push({name:a}))}return r}var y=["@shopify/remix-oxygen","@shopify/hydrogen","@builder.io/qwik-city","@remix-run/react","@sveltejs/kit","astro","gatsby","next","nuxt","@builder.io/qwik","angular","react","solid-js","svelte","vue"];async function j(o){let r=new Set,n=(...e)=>{if(process.env.DEBUG){let t=new Date,i=`${String(t.getMinutes()).padStart(2,"0")}:${String(t.getSeconds()).padStart(2,"0")}.${String(t.getMilliseconds()).padStart(3,"0")}`;console.debug(i,"[builder-dev-tools]",...e)}},a=async e=>{let t=F("md5");return t.update(e),t.digest("hex")},l={...s,getRootDir:()=>s.normalize(o.getRootDir()),cwd:()=>process.cwd(),exists:async e=>{try{return await h(e),!0}catch{return!1}},existsSync:e=>O(e),readdir:async(e,t)=>{let i=await w(e);return t?i.map(c=>s.join(e,c)):i},readdirSync:e=>b(e),readFile:async e=>{d(o,e);try{return await k(e,"utf-8")}catch(t){if(t.code==="ENOENT")return null;throw n(t,e),t}},readFileSync(e){d(o,e);try{return x(e,"utf-8")}catch(t){if(t.code==="ENOENT")return null;throw n(t,e),t}},stat:async e=>await v(e),statSync:e=>N(e),writeFile:async(e,t)=>{d(o,e),e=s.normalize(e);let i={path:e,basename:s.basename(e),dirname:s.dirname(e),extname:s.extname(e)};await S(s.dirname(e),{recursive:!0}),await D(e,t);for(let c of r)await c(i)},hash:a,getDeviceId:()=>a(`${C()}:${T()}`),formatCode:async(e,t)=>{let i=null;try{i=await g.resolveConfig(e)}catch{}try{return g.format(t,{...i,filepath:e})}catch{}return t},on:(e,t)=>{e==="change"&&r.add(t)},off:(e,t)=>{e==="change"&&r.delete(t)},debug:n,launchEditor:async e=>{try{let t=e.filePath;typeof e.line=="number"&&(t+=`:${e.line}`,typeof e.column=="number"&&(t+=`:${e.column}`)),P(t,"code",(i,c)=>{console.error(`Failed to launch editor for ${i}`),c&&console.error(c)})}catch(t){console.error(`Failed to launch editor for ${String(t.message||t)}`)}},platform:()=>({runtime:"node",os:process.platform}),getFrameworks:()=>[],ts:E,version:"1.0.10"},f=await m(l);return l.getFrameworks=()=>f,l}function d(o,r){if(o.skipValidate)return;if(!r)throw new Error(`Invalid path: ${r} (7340)`);r=s.normalize(s.resolve(r));let n=o.getRootDir();if(!r.startsWith(n))throw new Error(`Invalid path: ${r} (7341)`)}export{j as createDevToolsNodeSys};
